)Attr
 @ type(input ) caps(off) hilite(uscore)
 $ type(input ) caps(on ) hilite(uscore)
 # type(output) hilite(reverse) color(turq) caps(off)
 _ type(input) hilite(uscore)
)Body Expand(\\)
+Clone Repository+---------------#zigtitle    +---------------------------------
%Command ===>_zcmd                                                            +
+
%Remote Repository: +URL must use start with ssh://
 @remote                                                                      +
+
%Optional:          +Specific branch to clone (default is master)
 @remotebr                                   +
+
%Local Directory:   +? to browse OMVS folder structure
 @localrep                                                                    +
+
%Category for Repository:@zigicat      +            (optional)
+
%PREFIX for datasets:    $pdshlq                  + (no quotes)
+
%Default Push on Commit: $z+                        (Y or N)
+
%Default Userid set prior to Commit:$defruid +      (or blank
+
+
                  +Press%Enter+to continue, or%F3+to cancel
)Init
 .help = zigih110
 .zvars = '(defcpush)'
 .cursor = remote
 .csrpos = 7
 &remote = 'ssh://'
)Reinit
 REFRESH(REMOTE LOCALREP)
)Proc
 &resp = .resp
*REXX(* zedsmsg zedlmsg resp csr)
  zedsmsg = ''
  if translate(substr(remote,1,6)) <> 'SSH://' then do
        zedsmsg = 'Error'
        zedlmsg = 'Cloning only supports ssh, so remote must start',
          'with ssh://'
        csr = 'remote'
     end
  if word(remote,1) = 'git' then
    if word(remote,2) = 'clone' then
        remote = subword(remote,3)
  if localrep /= '?' then do
    x = bpxwunix('ls -la' localrep)
    if x > 0 then do
      zedsmsg = 'Error.'
      zedlmsg = localrep 'is not a valid OMVS directory. Change to a valid' ,
        'directory, or create a new directory and try again.'
      csr = 'LOCALREP'
    end
  end
  if zedsmsg = '' then do
    if length(defruid) = 8 then do
      CVT      = C2D(Storage(10,4))
      TVT      = C2D(Storage(D2X(CVT + 156),4))   /* cvt + 9c */
      TSVTUMXL = C2D(Storage(D2X(tvt  + 6),1))  /* tvt + 6 */
      if tsvtumxl < 8 then do
        zedsmsg = 'Error'
        zedlmsg = defruid 'is 8 characters and this system does not' ,
          'support 8 character TSO userids at this time.'
        csr = 'DEFRUID'
      end
    end
  end
*ENDREXX
 if (&zedsmsg NE &Z)
    .MSG = ISRZ001
    .CURSOR = &CSR
 if (&zedsmsg EQ &Z)
  ver (&remote,nb)
  ver (&localrep,nb)
  ver (&pdshlq,nb,dsname)
  ver (&defcpush,nb,list,Y,N)
  ver (&defruid,dsname)
)end
/* -------------------------------------------------------- */
/* zigi - the z/OS ISPF Git Interface                       */
/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */
/* -------------------------------------------------------- */
