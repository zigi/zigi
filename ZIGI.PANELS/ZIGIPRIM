)Attr
 $ type(output) caps(off) color(&srr)
 ` type(output) caps(off) color(turq)
 ] type(output) caps(off) intens(low) color(&srp)
 [ type(output) caps(off) intens(low) color(&src)
 } type(output) caps(off) intens(low) just(right) color(&srl)
 { type(input) caps(off) hilite(uscore) intens(low)
 ~ type(output) intens(high) caps(off) just(right) color(blue)
 ! type(text  ) intens(high) caps(off) just(right) color(blue)
 _ type(input) caps(on ) hilite(uscore) intens(low)
 # type(output) hilite(reverse) color(turq) caps(off)
 @ type(output) caps(off) pas(on) intens(high) color(white) hilite(uscore)
 | TYPE(AB)           /* Action bar                */
 < TYPE(ABSL) GE(ON)  /* Action bar separator line */
)ABC DESC('Commands')
 PDC DESC('Clone Remote repository')             ACTION RUN(CLONE)
 PDC DESC('Config View/Update Configuration')    ACTION RUN(CONFIG)
 PDC DESC('Connect existing repository')         ACTION RUN(CONNECT)
 PDC DESC('Create Local repository')             ACTION RUN(CREATE)
 PDC DESC('Enable Debug Logging')                ACTION RUN(LOGD)
 PDC DESC('Update GIT Environment File')         ACTION RUN(GITENV)
 PDC DESC('Find text in table')                  ACTION RUN(FIND)
 PDC DESC('Set Git Defaults')                    ACTION RUN(SET)
 PDC DESC('Select a Repo to work with')          ACTION RUN(SELECT)
 PDC DESC('Sort the Table')                      ACTION RUN(SORT)
 PDC DESC('View your SSH public key')            ACTION RUN(SSH)
 PDC DESC('View Debug Log')                      ACTION RUN(VIEWD)
 PDC DESC('ZIGI/Git Information')                ACTION RUN(GITINFO)
 PDC DESC('End') Action Run(END)
)ABCINIT
  .ZVARS = 'MENUX'
)ABC DESC(Help)
 PDC DESC('About') ACTION RUN(Tutor) Parm('zigihabt')
 PDC DESC('Change History') ACTION RUN(ISRROUTE) PARM('SELECT CMD(%zigichg)')
 PDC DESC('Feedback') ACTION RUN(Tutor) Parm('zigifdbk')
 PDC DESC('GIT Help') ACTION RUN(ISRROUTE) PARM('SELECT CMD(%GITHELP)')
 PDC DESC('Help') ACTION RUN(TUTOR) PARM('zigihint')
)ABCINIT
  .ZVARS = HELPX
)Body Expand(\\)
+| Commands | Help + \ \!Git~gitver
<-----------\-\--------------------------------+
+Local Repositories+\-\#zigtitle    +\-\------------------
%Command ===>{zcmd       \ \ %Scroll ===>_zgsr+
                            `dovestat                                      %F3 +
%    @repo      +           @pref  +               @cat     +      @last       +
)Model
_z+  $z                    +]z                    +[z             +}z          +
)Init
 &cat     = 'Category'
 &last    = 'Last Access'
 &pref    = 'Prefix'
 &repo    = 'Repository'
 &zgsr = CSR
 .zvars = '(zsel reponame pdshlq zigicat zigidate)'
 .help = zigihint
)Proc
 &row = &z
 if (&ZCMD = &Z)
     if (&ztdsels = 0000)
        &row = .csrrow
        if (&row ^= &z)
            if (&zsel = &z)
                &zsel = S
     if (&ztdsels ^= 0000)
         &row = &z
     if (&ZSEL ^= &Z)
       if (&Zsel = '=')
           &Zsel = &osel
     &osel = &zsel
 if (&row = 0)
     &zsel = &z
 ver (&zsel,list,I,S,D,V,/)
)PNTS
 FIELD(CAT     ) VAR(ZCMD) VAL('SORT CATEGORY')
 FIELD(LAST    ) VAR(ZCMD) VAL('SORT LAST')
 FIELD(PREF    ) VAR(ZCMD) VAL('SORT PREFIX')
 FIELD(REPO    ) VAR(ZCMD) VAL('SORT REPOSITORY')
)end
/* --------------------- Copyright (C) ------------------------- */
/* ZIGI - the z/OS ISPF Git Interface                            */
/* Copyright (C) 2020-2025 GPL V3 - Henri Kuiper and Lionel Dyck */
/* ------------------------------------------------------------- */
