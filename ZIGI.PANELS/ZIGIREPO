)Attr Default(%+_)
  _ type( input) intens(low ) caps(off) just(left ) hilite(uscore)
  @ type( input) intens(low ) caps(on ) just(left ) hilite(uscore)
  $ type(output) intens(low ) caps(off) just(left )
  ] type(output) intens(low ) caps(off) just(left ) color(green)
  ! type(output) intens(high) caps(off) just(left )
  + type(text) intens(low) skip(on)
  % type(text) intens(high) skip(on)
  # type(output) hilite(reverse) color(turq) caps(off)
  [ type(output) caps(off) pas(on) intens(high) color(white)
 | TYPE(AB)           /* Action bar                */
 < TYPE(ABSL) GE(ON)  /* Action bar separator line */
)ABC DESC('General') MNEM(1)
 PDC DESC('Find in table')                      ACTION RUN(Find    )
 PDC DESC('Repository Info')                    ACTION RUN(Info    )
 PDC DESC('View OMVS Filesystem')               ACTION RUN(View    )
 PDC DESC('Git Log Query')                      ACTION RUN(GitLog  )
 PDC DESC('Git Command Interface')              ACTION RUN(gitcmd)
 PDC DESC('Refresh Status')                     ACTION RUN(Check   )
 PDC DESC('Replace z/OS Datasets from Repo')    ACTION RUN(Replace )
 PDC DESC('Set Defaults')                       ACTION RUN(Set     )
 PDC DESC('End')                                Action Run(END)
)ABCINIT
  .ZVARS = 'MENUG'
)ABC DESC('Local Repo') MNEM(1)
 PDC DESC('Add dataset(s)')                     ACTION RUN(Add     )
 PDC DESC('Add All Modified/Untracked')         ACTION RUN(AddAll  )
 PDC DESC('Commit Changes')                     ACTION RUN(Commit  )
 PDC DESC('Diff')                               ACTION RUN(Diff    )
 PDC DESC('Stash')                              ACTION RUN(Stash   )
 PDC DESC('Stash List' )                        ACTION RUN(StashL  )
 PDC DESC('Extract or Rollback')                ACTION RUN(Extract)
 PDC DESC('Tag')                                ACTION RUN(Tag     )
 PDC DESC('Tag List')                           ACTION RUN(TagList )
 PDC DESC('Create / Checkout Branch')           ACTION RUN(Br      )
 PDC DESC('Merge Branches')                     ACTION RUN(Merge   )
 PDC DESC('End')                                Action Run(END)
)ABCINIT
  .ZVARS = 'MENUM'
)ABC DESC('Remote Repo') MNEM(1)
 PDC DESC('Add Remote to Repo')                 ACTION RUN(Remote  )
 PDC DESC('Pull from Remote Repository')        ACTION RUN(Pull    )
 PDC DESC('Push to Remote Repository' )         ACTION RUN(Push    )
 PDC DESC('Fetch Updated Repo Data')            ACTION RUN(Fetch   )
 PDC DESC('End')                                Action Run(END)
)ABCINIT
  .ZVARS = 'MENUY'
)ABC DESC('Handy Functions') MNEM(1)
 PDC DESC('Find String in Repo Files')          ACTION RUN(Grep    )
 PDC DESC('Git Status')                         ACTION RUN(Status  )
 PDC DESC('Start ZIGIFLOW')                     ACTION RUN(FLOWGO)
 PDC DESC('Finish ZIGIFLOW')                    ACTION RUN(FLOWEND)
 PDC DESC('Select Unfinished ZIGIFLOW')         ACTION RUN(FLOWSEL)
 PDC DESC('Git Network Report')                 ACTION RUN(Network )
 PDC DESC('Create Escrow Copy')                 ACTION RUN(Snapshot)
 PDC DESC('Convert non-ZIGI Repository')        ACTION RUN(Convrepo)
 PDC DESC('End')                                Action Run(END)
)ABCINIT
  .ZVARS = 'MENUH'
)ABC DESC(Help) MNEM(1)
 PDC DESC('About') ACTION RUN(Tutor) Parm('zigihabt')
 PDC DESC('Change History') ACTION RUN(ISRROUTE) PARM('SELECT CMD(%zigichg)')
 PDC DESC('Feedback') ACTION RUN(Tutor) Parm('zigifdbk')
 PDC DESC('Git Help') ACTION RUN(ISRROUTE) PARM('SELECT CMD(%GITHELP)')
 PDC DESC('Help') ACTION RUN(TUTOR) PARM('zigih200')
 PDC DESC('End')                                Action Run(END)
)ABCINIT
  .ZVARS = 'MENUZ'
)Body  Expand(\\)
+| General | Local Repo | Remote Repo | Handy Functions | Help +
<-----------\-\--------------------------------+
+Current Repository+--------------#zigtitle    +--------------------------------
%Command ===>_zcmd            \ \  %Scroll ===>_zgsr+
+Local dir     :$localdir                                                 %F3  +
+Remote path   :$remote1                                                    $z
+Current Branch:$branch                                      +
%               !bstat                                                     +
!ro             $baction                                                   +
+
%S  Status                    Dataset/File Name
)Model
@z +$z                       $z                                            ]z
)Init
 .zvars = '(sind zsel dsnstat fulldsn filetype)'
 .cursor = &zcmd
 .help = zigih200
 &zgsr = CSR
 vget (readonly) shared
 *REXX(readonly ro)
  if readonly = 0 then ro = ''
  else ro = 'ReadOnly'
 *EndRexx
)Proc
 &row = &z
 if (&ZCMD = &Z)
     if (&ztdsels = 0000)
        &row = .csrrow
        if (&row ^= &z)
            if (&zsel = &z)
                &zsel = S
     if (&ztdsels ^= 0000)
         &row = &z
     if (&ZSEL ^= &Z)
       if (&Zsel = '=')
           &Zsel = &osel
     &osel = &zsel
 if (&row = 0)
     &zsel = &z
 if (&zsel = 'MV')
     &zsel = 'RN'
/*  ver (&zsel,list,S,A,U,B,V,RM,RN,H,D,/) */
)Field
 Field(remote1) ind(sind,'<>') len(255)
)End
/* -------------------------------------------------------- */
/* ZIGI - the z/OS ISPF Git Interface                       */
/* Copyright (C) 2020 GPL V3 - Henri Kuiper and Lionel Dyck */
/* -------------------------------------------------------- */
